plugins {
    id 'java'
    id 'scala'
    id 'application'
    id "com.github.johnrengelman.shadow" version "6.1.0"
}


// artifact properties
group = 'com.skonuniverse.flink'
version = '0.1'
mainClassName = 'com.skonuniverse.flink.WindowTriggers'
description = """Rapid window processing of rare messages on Apache Flink"""

ext {
    javaVersion = '1.8'
    flinkVersion = '1.12.2'
    json4sVersion = '3.6.11'
    log4jVersion = '2.14.1'
    scalaBinaryVersion = '2.12'
    scalaLoggingVersion = '3.9.3'
    scoptVersion = '4.0.1'
    slf4jVersion = '1.7.30'
}


sourceCompatibility = javaVersion
targetCompatibility = javaVersion

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

applicationDefaultJvmArgs = ["-Dlog4j.configurationFile=log4j2.properties"]

// declare where to find the dependencies of your project
repositories {
    mavenCentral()
    maven { url "https://repository.apache.org/content/repositories/snapshots/" }
}

// NOTE: We cannot use "compileOnly" or "shadow" configurations since then we could not run code
// in the IDE or with "gradle run". We also cannot exclude transitive dependencies from the
// shadowJar yet (see https://github.com/johnrengelman/shadow/issues/159).
// -> Explicitly define the // libraries we want to be included in the "flinkShadowJar" configuration!
configurations {
    flinkShadowJar // dependencies which go into the shadowJar

    // always exclude these (also from transitive dependencies) since they are provided by Flink
    flinkShadowJar.exclude group: 'org.apache.flink', module: 'force-shading'
    flinkShadowJar.exclude group: 'com.google.code.findbugs', module: 'jsr305'
    flinkShadowJar.exclude group: 'org.slf4j'
    flinkShadowJar.exclude group: 'org.apache.logging.log4j'
}

// declare the dependencies for your production and test code
dependencies {
    // --------------------------------------------------------------
    // Compile-time dependencies that should NOT be part of the
    // shadow jar and are provided in the lib folder of Flink
    // --------------------------------------------------------------
    implementation group: "org.apache.flink", name: "flink-streaming-scala_${scalaBinaryVersion}", version: "${flinkVersion}"
    implementation group: "org.apache.flink", name: "flink-clients_${scalaBinaryVersion}", version: "${flinkVersion}"
    implementation group: "org.apache.flink", name: "flink-connector-kafka_${scalaBinaryVersion}", version: "${flinkVersion}"
    implementation group: "org.apache.flink", name: "flink-statebackend-rocksdb_${scalaBinaryVersion}", version: "${flinkVersion}"


    // --------------------------------------------------------------
    // Dependencies that should be part of the shadow jar, e.g.
    // connectors. These must be in the flinkShadowJar configuration!
    // --------------------------------------------------------------
    //flinkShadowJar "org.apache.flink:flink-connector-kafka_${scalaBinaryVersion}:${flinkVersion}"

    implementation group: "com.github.scopt", name: "scopt_${scalaBinaryVersion}", version: "${scoptVersion}"
    implementation group: "org.json4s", name: "json4s-native_${scalaBinaryVersion}", version: "${json4sVersion}"

    implementation group: "com.typesafe.scala-logging", name: "scala-logging_${scalaBinaryVersion}", version: "${scalaLoggingVersion}"

    compile "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    compile "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    compile "org.slf4j:slf4j-log4j12:${slf4jVersion}"

    // Add test dependencies here.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
}

// make compileOnly dependencies available for tests:
sourceSets {
    main.compileClasspath += configurations.flinkShadowJar
    main.runtimeClasspath += configurations.flinkShadowJar

    test.compileClasspath += configurations.flinkShadowJar
    test.runtimeClasspath += configurations.flinkShadowJar

    javadoc.classpath += configurations.flinkShadowJar
}

run.classpath = sourceSets.main.runtimeClasspath

jar {
    manifest {
        attributes 'Built-By': System.getProperty('user.name'),
                'Build-Jdk': System.getProperty('java.version')
    }
}

test {
    useJUnitPlatform()
}
